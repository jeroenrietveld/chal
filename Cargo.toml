[package]
name = "chal-wasm"
version = "0.1.0"
authors = ["Jeroen Rietveld <jeroen.rietveld@labela.nl>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2"
js-sys = "0.3.25"
lazy_static = "1.3.0"
nalgebra = "=0.16.12"
bincode = "=1.0.1"
blender-mesh = "=0.3.3"
blender-armature = "=0.1.7"
chal-engine = { path = "../chal-engine" }
specs = "0.14.2"
specs-derive = "0.4.0"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.2", optional = true }

[dependencies.web-sys]
version = "0.3.4"
features = [
  'console',
  'Document',
  'Element',
  'HtmlCanvasElement',
  'WebGlBuffer',
  'WebGlRenderingContext',
  'WebGlProgram',
  'WebGlShader',
  'WebGlUniformLocation',
  'Window',
  'MouseEvent',
  'WheelEvent',
  'Event',
  'EventTarget',
]

[dev-dependencies]
wasm-bindgen-test = "0.2"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
